export interface IAuthSupportedMethods {
  id: string;
  type: 'form' | 'button';
  name: string;
  description: string;
  url: string;
  icon: string;
  formDetails?: {
    fields: {
      id: string;
      type: string;
      name: string;
      required: boolean;
      placeholder: string;
    }[];
    clientRedirectUrl: string;
    button: {
      title: string;
    };
  };
}

export interface IUserAccount {
  user: string | any;

  provider: string;
  type: string;
  providerAccountId: string;
  accessToken: string;
  tokenType: string;
  scope: string;

  idToken?: string; // google
  refreshToken?: string; // google
  expiresAt?: number; // google
  methodConfig: IAuthSupportedMethod;
}

export interface IAuthSupportedMethod {
  id: string;
  validScreens: string[];
  type: 'form' | 'button';
  name: string;
  description: string;
  url: string;
  icon: string;
  formDetails?: {
    fields: {
      id: string;
      type: string;
      name: string;
      required: boolean;
      placeholder: string;
    }[];
    clientRedirectUrl: string;
    button: {
      title: string;
    };
  };
}

export interface IUser {
  _id: string;
  id: string;
  name: string;
  image: string;
  role: string;
  email: string;
  blocked: boolean;
  blockedReason: string;
  blockedAt: Date;
  emailVerified: boolean;
  deleted: boolean;
  createdAt: Date;
  updatedAt: Date;
  accounts?: IUserAccount[];
  tags: string[] | IUserTag[];
}
export interface IUserTag {
  title: string;
  slug: string;
}

export interface ICollectionField {
  slug: string;
  title: string;
  helpText: string;
  type: string;
  required: boolean;
  defaultValue: string | number | boolean;
}

export interface ICollectionVersion {
  _id: string;
  name: string;
  version: number;
  collectionId: string;
  live: boolean;
  deprecated: boolean;
  creator: string | IUser;
  fields: ICollectionField[];

  deleted: boolean;
  createdAt: Date;
  updatedAt: Date;
}

export interface ICollectionRecord {
  _id: string;
  collectionId: string;
  versionId: string;
  deleted: boolean;
  createdAt: Date;
  updatedAt: Date;
  archived: boolean;
  creator: string | IUser;
  formId: string | IForm;
  data: {
    [key: string]: any;
  };
}

export interface ICollection {
  _id: string;
  name: string;
  slug: string;
  collectionId: string;
  archived: boolean;
  creator: string | IUser;
  latest: string;
  versions: string[];

  deleted: boolean;
  createdAt: Date;
  updatedAt: Date;
}

export interface ICustomCollectionVersion {
  name: string;
  version: number;
  collectionId: string | ICustomCollection;
  creator: string | IUser;
  fields: ICollectionField[];
  live: boolean;
  deprecated: boolean;
}

export interface IForm {
  name: string;
  title: string;
  description: string;
  formId: string;
  collectionId: string | ICustomCollection;
  orgId: string;
  collectionVersionId: string | ICustomCollectionVersion;
  archived: boolean;
  published: boolean;
  publishedAt: Date;
  submissions: number;
  creator: string | IUser;
  url?: string;
}

export interface ICustomCollection {
  name: string;
  slug: string;
  collectionId: string;
  archived: boolean;
  creator: string | IUser;
}

export interface IAsset extends Document {
  name: string; // original name
  uniqueName: string; // unique name generated by multer
  mimeType: string; // mime type
  size: number; // size in bytes
  encoding: string; // encoding
  bucket: {
    name: string;
    url: string;
    path: string;
  };
  public: boolean;
  metadata: Object;
  // image only
  image?: {
    width: number;
    height: number;
  };
  tags: string[];
  creator: string;
}

export * from './axios/types';
export * from './axios';
// Auth
export * from './contollers/auth/auth.service';
export * from './contollers/auth/configs.service';
export * from './contollers/auth/methods.service';
export * from './contollers/auth/settings.service';

// Blogs
export * from './contollers/blogs/blogs.service';
export * from './contollers/blogs/blogsAuthors.service';
export * from './contollers/blogs/blogsFolders.service';
export * from './contollers/blogs/blogsTags.service';

// Docs
export * from './contollers/docs/docs.service';
export * from './contollers/docs/docsAuthors.service';
export * from './contollers/docs/docsFolders.service';
export * from './contollers/docs/docsTags.service';

// Forms
export * from './contollers/forms/forms.service';

// Collections
export * from './contollers/collections/collections.service';
